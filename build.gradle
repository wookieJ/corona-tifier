buildscript {
    ext.kotlin_version = "1.3.50"
    ext.spring_boot_version = "2.1.8.RELEASE"
    ext.fasterxml_version = "2.9.10"
    ext.mockito_version = "2.23.0"
    ext.junit_version = "5.3.2"
    ext.http_client_version = "4.5"
    ext.spring_security_version = "3.1.0.RELEASE"
    ext.google_actions_version = "1.0.0"
    ext.jsoup_version = "1.13.1"
    ext.wiremock_version = "2.25.1"
    ext.spock_version = "1.3-groovy-2.5"
    ext.groovy_version = "2.5.8"

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: "kotlin"
apply plugin: "groovy"
apply plugin: "jacoco"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "project-report"

jar {
    baseName = "corona-tifier"
    version = "0.1.0"
}

repositories {
    jcenter()
}

dependencies {
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: "$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "$kotlin_version"
    compile group: "org.springframework.boot", name: "spring-boot-starter-web"
    compile group: "com.fasterxml.jackson.module", name: 'jackson-module-afterburner', version: "$fasterxml_version"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "$fasterxml_version"
    compile group: "org.apache.httpcomponents", name: "httpclient", version: "$http_client_version"
    compile group: "org.springframework.security", name: "spring-security-core", version: "$spring_security_version"

    compile(group: "com.google.actions", name: "actions-on-google", version: "$google_actions_version") {
        exclude group: 'org.slf4j'
    }

    compile group: "org.jsoup", name: "jsoup", version: "$jsoup_version"

    testCompile group: "org.spockframework", name: "spock-core", version: "$spock_version"
    testCompile group: "org.codehaus.groovy", name: "groovy-all", version: "$groovy_version"
    testCompile group: "org.spockframework", name: "spock-spring", version: "$spock_version"
    testCompile group: "org.springframework.boot", name: "spring-boot-starter-test", version: "$spring_boot_version"
    testCompile group: "org.mockito", name: "mockito-core", version: "$mockito_version"
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "$junit_version"
    testCompile group: "org.springframework.boot", name: "spring-boot-starter-test"
    testImplementation group: "com.github.tomakehurst", name: "wiremock", version: "$wiremock_version"
}

sourceSets {
    integration {
        groovy.srcDir "$projectDir/src/integration/groovy"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    group = "verification"
    description = "Run integartion tests"
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    testLogging {
        exceptionFormat = 'full'
    }
}

test {
    group = "verification"
    description = "Run unit tests"
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}

jacocoTestReport {
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn integrationTest
check.dependsOn test

jacoco {
    toolVersion = "0.8.5"
}
